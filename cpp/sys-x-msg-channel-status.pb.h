// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-channel-status.proto

#ifndef PROTOBUF_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto__INCLUDED
#define PROTOBUF_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrChannelStatusSubReqImpl();
void InitDefaultsXmsgImHlrChannelStatusSubReq();
void InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrChannelStatusSubRspImpl();
void InitDefaultsXmsgImHlrChannelStatusSubRsp();
void InitDefaultsXmsgImHlrChannelStatusPubReqImpl();
void InitDefaultsXmsgImHlrChannelStatusPubReq();
void InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrChannelStatusPubRspImpl();
void InitDefaultsXmsgImHlrChannelStatusPubRsp();
void InitDefaultsXmsgImHlrChannelStatusChangedNoticeImpl();
void InitDefaultsXmsgImHlrChannelStatusChangedNotice();
void InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupChannelStatusSubReqImpl();
void InitDefaultsXmsgImGroupChannelStatusSubReq();
void InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupChannelStatusSubRspImpl();
void InitDefaultsXmsgImGroupChannelStatusSubRsp();
void InitDefaultsXmsgImGroupChannelStatusPubReqImpl();
void InitDefaultsXmsgImGroupChannelStatusPubReq();
void InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupChannelStatusPubRspImpl();
void InitDefaultsXmsgImGroupChannelStatusPubRsp();
void InitDefaultsXmsgImGroupChannelStatusChangedNoticeImpl();
void InitDefaultsXmsgImGroupChannelStatusChangedNotice();
inline void InitDefaults() {
  InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrChannelStatusSubReq();
  InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrChannelStatusSubRsp();
  InitDefaultsXmsgImHlrChannelStatusPubReq();
  InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrChannelStatusPubRsp();
  InitDefaultsXmsgImHlrChannelStatusChangedNotice();
  InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupChannelStatusSubReq();
  InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupChannelStatusSubRsp();
  InitDefaultsXmsgImGroupChannelStatusPubReq();
  InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupChannelStatusPubRsp();
  InitDefaultsXmsgImGroupChannelStatusChangedNotice();
}
}  // namespace protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto
class XmsgImGroupChannelStatusChangedNotice;
class XmsgImGroupChannelStatusChangedNoticeDefaultTypeInternal;
extern XmsgImGroupChannelStatusChangedNoticeDefaultTypeInternal _XmsgImGroupChannelStatusChangedNotice_default_instance_;
class XmsgImGroupChannelStatusPubReq;
class XmsgImGroupChannelStatusPubReqDefaultTypeInternal;
extern XmsgImGroupChannelStatusPubReqDefaultTypeInternal _XmsgImGroupChannelStatusPubReq_default_instance_;
class XmsgImGroupChannelStatusPubRsp;
class XmsgImGroupChannelStatusPubRspDefaultTypeInternal;
extern XmsgImGroupChannelStatusPubRspDefaultTypeInternal _XmsgImGroupChannelStatusPubRsp_default_instance_;
class XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse;
class XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusSubReq;
class XmsgImGroupChannelStatusSubReqDefaultTypeInternal;
extern XmsgImGroupChannelStatusSubReqDefaultTypeInternal _XmsgImGroupChannelStatusSubReq_default_instance_;
class XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse;
class XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusSubRsp;
class XmsgImGroupChannelStatusSubRspDefaultTypeInternal;
extern XmsgImGroupChannelStatusSubRspDefaultTypeInternal _XmsgImGroupChannelStatusSubRsp_default_instance_;
class XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse;
class XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrChannelStatusChangedNotice;
class XmsgImHlrChannelStatusChangedNoticeDefaultTypeInternal;
extern XmsgImHlrChannelStatusChangedNoticeDefaultTypeInternal _XmsgImHlrChannelStatusChangedNotice_default_instance_;
class XmsgImHlrChannelStatusPubReq;
class XmsgImHlrChannelStatusPubReqDefaultTypeInternal;
extern XmsgImHlrChannelStatusPubReqDefaultTypeInternal _XmsgImHlrChannelStatusPubReq_default_instance_;
class XmsgImHlrChannelStatusPubRsp;
class XmsgImHlrChannelStatusPubRspDefaultTypeInternal;
extern XmsgImHlrChannelStatusPubRspDefaultTypeInternal _XmsgImHlrChannelStatusPubRsp_default_instance_;
class XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse;
class XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrChannelStatusSubReq;
class XmsgImHlrChannelStatusSubReqDefaultTypeInternal;
extern XmsgImHlrChannelStatusSubReqDefaultTypeInternal _XmsgImHlrChannelStatusSubReq_default_instance_;
class XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse;
class XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrChannelStatusSubRsp;
class XmsgImHlrChannelStatusSubRspDefaultTypeInternal;
extern XmsgImHlrChannelStatusSubRspDefaultTypeInternal _XmsgImHlrChannelStatusSubRsp_default_instance_;
class XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse;
class XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;

// ===================================================================

class XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse();
  XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse& other);
  static const XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse*>(&_XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrChannelStatusSubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrChannelStatusSubReq) */ {
 public:
  XmsgImHlrChannelStatusSubReq();
  virtual ~XmsgImHlrChannelStatusSubReq();

  XmsgImHlrChannelStatusSubReq(const XmsgImHlrChannelStatusSubReq& from);

  inline XmsgImHlrChannelStatusSubReq& operator=(const XmsgImHlrChannelStatusSubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrChannelStatusSubReq(XmsgImHlrChannelStatusSubReq&& from) noexcept
    : XmsgImHlrChannelStatusSubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrChannelStatusSubReq& operator=(XmsgImHlrChannelStatusSubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrChannelStatusSubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrChannelStatusSubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrChannelStatusSubReq*>(
               &_XmsgImHlrChannelStatusSubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgImHlrChannelStatusSubReq* other);
  friend void swap(XmsgImHlrChannelStatusSubReq& a, XmsgImHlrChannelStatusSubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrChannelStatusSubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrChannelStatusSubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrChannelStatusSubReq& from);
  void MergeFrom(const XmsgImHlrChannelStatusSubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrChannelStatusSubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrChannelStatusSubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusSubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse();
  XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrChannelStatusSubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrChannelStatusSubRsp) */ {
 public:
  XmsgImHlrChannelStatusSubRsp();
  virtual ~XmsgImHlrChannelStatusSubRsp();

  XmsgImHlrChannelStatusSubRsp(const XmsgImHlrChannelStatusSubRsp& from);

  inline XmsgImHlrChannelStatusSubRsp& operator=(const XmsgImHlrChannelStatusSubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrChannelStatusSubRsp(XmsgImHlrChannelStatusSubRsp&& from) noexcept
    : XmsgImHlrChannelStatusSubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrChannelStatusSubRsp& operator=(XmsgImHlrChannelStatusSubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrChannelStatusSubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrChannelStatusSubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrChannelStatusSubRsp*>(
               &_XmsgImHlrChannelStatusSubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImHlrChannelStatusSubRsp* other);
  friend void swap(XmsgImHlrChannelStatusSubRsp& a, XmsgImHlrChannelStatusSubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrChannelStatusSubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrChannelStatusSubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrChannelStatusSubRsp& from);
  void MergeFrom(const XmsgImHlrChannelStatusSubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrChannelStatusSubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrChannelStatusSubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusSubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrChannelStatusPubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrChannelStatusPubReq) */ {
 public:
  XmsgImHlrChannelStatusPubReq();
  virtual ~XmsgImHlrChannelStatusPubReq();

  XmsgImHlrChannelStatusPubReq(const XmsgImHlrChannelStatusPubReq& from);

  inline XmsgImHlrChannelStatusPubReq& operator=(const XmsgImHlrChannelStatusPubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrChannelStatusPubReq(XmsgImHlrChannelStatusPubReq&& from) noexcept
    : XmsgImHlrChannelStatusPubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrChannelStatusPubReq& operator=(XmsgImHlrChannelStatusPubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrChannelStatusPubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrChannelStatusPubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrChannelStatusPubReq*>(
               &_XmsgImHlrChannelStatusPubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgImHlrChannelStatusPubReq* other);
  friend void swap(XmsgImHlrChannelStatusPubReq& a, XmsgImHlrChannelStatusPubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrChannelStatusPubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrChannelStatusPubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrChannelStatusPubReq& from);
  void MergeFrom(const XmsgImHlrChannelStatusPubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrChannelStatusPubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
  int notice_size() const;
  void clear_notice();
  static const int kNoticeFieldNumber = 1;
  const ::XmsgImHlrChannelStatusChangedNotice& notice(int index) const;
  ::XmsgImHlrChannelStatusChangedNotice* mutable_notice(int index);
  ::XmsgImHlrChannelStatusChangedNotice* add_notice();
  ::google::protobuf::RepeatedPtrField< ::XmsgImHlrChannelStatusChangedNotice >*
      mutable_notice();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImHlrChannelStatusChangedNotice >&
      notice() const;

  // bool more = 2;
  void clear_more();
  static const int kMoreFieldNumber = 2;
  bool more() const;
  void set_more(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrChannelStatusPubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImHlrChannelStatusChangedNotice > notice_;
  bool more_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusPubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse();
  XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrChannelStatusPubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrChannelStatusPubRsp) */ {
 public:
  XmsgImHlrChannelStatusPubRsp();
  virtual ~XmsgImHlrChannelStatusPubRsp();

  XmsgImHlrChannelStatusPubRsp(const XmsgImHlrChannelStatusPubRsp& from);

  inline XmsgImHlrChannelStatusPubRsp& operator=(const XmsgImHlrChannelStatusPubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrChannelStatusPubRsp(XmsgImHlrChannelStatusPubRsp&& from) noexcept
    : XmsgImHlrChannelStatusPubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrChannelStatusPubRsp& operator=(XmsgImHlrChannelStatusPubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrChannelStatusPubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrChannelStatusPubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrChannelStatusPubRsp*>(
               &_XmsgImHlrChannelStatusPubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImHlrChannelStatusPubRsp* other);
  friend void swap(XmsgImHlrChannelStatusPubRsp& a, XmsgImHlrChannelStatusPubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrChannelStatusPubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrChannelStatusPubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrChannelStatusPubRsp& from);
  void MergeFrom(const XmsgImHlrChannelStatusPubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrChannelStatusPubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrChannelStatusPubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusPubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrChannelStatusChangedNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrChannelStatusChangedNotice) */ {
 public:
  XmsgImHlrChannelStatusChangedNotice();
  virtual ~XmsgImHlrChannelStatusChangedNotice();

  XmsgImHlrChannelStatusChangedNotice(const XmsgImHlrChannelStatusChangedNotice& from);

  inline XmsgImHlrChannelStatusChangedNotice& operator=(const XmsgImHlrChannelStatusChangedNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrChannelStatusChangedNotice(XmsgImHlrChannelStatusChangedNotice&& from) noexcept
    : XmsgImHlrChannelStatusChangedNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrChannelStatusChangedNotice& operator=(XmsgImHlrChannelStatusChangedNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrChannelStatusChangedNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrChannelStatusChangedNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrChannelStatusChangedNotice*>(
               &_XmsgImHlrChannelStatusChangedNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XmsgImHlrChannelStatusChangedNotice* other);
  friend void swap(XmsgImHlrChannelStatusChangedNotice& a, XmsgImHlrChannelStatusChangedNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrChannelStatusChangedNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrChannelStatusChangedNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrChannelStatusChangedNotice& from);
  void MergeFrom(const XmsgImHlrChannelStatusChangedNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrChannelStatusChangedNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string plat = 2;
  void clear_plat();
  static const int kPlatFieldNumber = 2;
  const ::std::string& plat() const;
  void set_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_plat(::std::string&& value);
  #endif
  void set_plat(const char* value);
  void set_plat(const char* value, size_t size);
  ::std::string* mutable_plat();
  ::std::string* release_plat();
  void set_allocated_plat(::std::string* plat);

  // string did = 3;
  void clear_did();
  static const int kDidFieldNumber = 3;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  #if LANG_CXX11
  void set_did(::std::string&& value);
  #endif
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // string status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:XmsgImHlrChannelStatusChangedNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr plat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusChangedNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
  XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse& other);
  static const XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse*>(&_XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupChannelStatusSubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusSubReq) */ {
 public:
  XmsgImGroupChannelStatusSubReq();
  virtual ~XmsgImGroupChannelStatusSubReq();

  XmsgImGroupChannelStatusSubReq(const XmsgImGroupChannelStatusSubReq& from);

  inline XmsgImGroupChannelStatusSubReq& operator=(const XmsgImGroupChannelStatusSubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusSubReq(XmsgImGroupChannelStatusSubReq&& from) noexcept
    : XmsgImGroupChannelStatusSubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusSubReq& operator=(XmsgImGroupChannelStatusSubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusSubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusSubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusSubReq*>(
               &_XmsgImGroupChannelStatusSubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XmsgImGroupChannelStatusSubReq* other);
  friend void swap(XmsgImGroupChannelStatusSubReq& a, XmsgImGroupChannelStatusSubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusSubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusSubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusSubReq& from);
  void MergeFrom(const XmsgImGroupChannelStatusSubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusSubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusSubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusSubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
  XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse& other);
  static const XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse*>(&_XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupChannelStatusSubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusSubRsp) */ {
 public:
  XmsgImGroupChannelStatusSubRsp();
  virtual ~XmsgImGroupChannelStatusSubRsp();

  XmsgImGroupChannelStatusSubRsp(const XmsgImGroupChannelStatusSubRsp& from);

  inline XmsgImGroupChannelStatusSubRsp& operator=(const XmsgImGroupChannelStatusSubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusSubRsp(XmsgImGroupChannelStatusSubRsp&& from) noexcept
    : XmsgImGroupChannelStatusSubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusSubRsp& operator=(XmsgImGroupChannelStatusSubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusSubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusSubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusSubRsp*>(
               &_XmsgImGroupChannelStatusSubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(XmsgImGroupChannelStatusSubRsp* other);
  friend void swap(XmsgImGroupChannelStatusSubRsp& a, XmsgImGroupChannelStatusSubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusSubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusSubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusSubRsp& from);
  void MergeFrom(const XmsgImGroupChannelStatusSubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusSubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusSubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusSubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusPubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusPubReq) */ {
 public:
  XmsgImGroupChannelStatusPubReq();
  virtual ~XmsgImGroupChannelStatusPubReq();

  XmsgImGroupChannelStatusPubReq(const XmsgImGroupChannelStatusPubReq& from);

  inline XmsgImGroupChannelStatusPubReq& operator=(const XmsgImGroupChannelStatusPubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusPubReq(XmsgImGroupChannelStatusPubReq&& from) noexcept
    : XmsgImGroupChannelStatusPubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusPubReq& operator=(XmsgImGroupChannelStatusPubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusPubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusPubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusPubReq*>(
               &_XmsgImGroupChannelStatusPubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(XmsgImGroupChannelStatusPubReq* other);
  friend void swap(XmsgImGroupChannelStatusPubReq& a, XmsgImGroupChannelStatusPubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusPubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusPubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusPubReq& from);
  void MergeFrom(const XmsgImGroupChannelStatusPubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusPubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
  int notice_size() const;
  void clear_notice();
  static const int kNoticeFieldNumber = 1;
  const ::XmsgImGroupChannelStatusChangedNotice& notice(int index) const;
  ::XmsgImGroupChannelStatusChangedNotice* mutable_notice(int index);
  ::XmsgImGroupChannelStatusChangedNotice* add_notice();
  ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice >*
      mutable_notice();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice >&
      notice() const;

  // bool more = 2;
  void clear_more();
  static const int kMoreFieldNumber = 2;
  bool more() const;
  void set_more(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusPubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice > notice_;
  bool more_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusPubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
  XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse& other);
  static const XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse*>(&_XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupChannelStatusPubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusPubRsp) */ {
 public:
  XmsgImGroupChannelStatusPubRsp();
  virtual ~XmsgImGroupChannelStatusPubRsp();

  XmsgImGroupChannelStatusPubRsp(const XmsgImGroupChannelStatusPubRsp& from);

  inline XmsgImGroupChannelStatusPubRsp& operator=(const XmsgImGroupChannelStatusPubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusPubRsp(XmsgImGroupChannelStatusPubRsp&& from) noexcept
    : XmsgImGroupChannelStatusPubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusPubRsp& operator=(XmsgImGroupChannelStatusPubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusPubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusPubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusPubRsp*>(
               &_XmsgImGroupChannelStatusPubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(XmsgImGroupChannelStatusPubRsp* other);
  friend void swap(XmsgImGroupChannelStatusPubRsp& a, XmsgImGroupChannelStatusPubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusPubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusPubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusPubRsp& from);
  void MergeFrom(const XmsgImGroupChannelStatusPubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusPubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusPubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusPubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusChangedNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusChangedNotice) */ {
 public:
  XmsgImGroupChannelStatusChangedNotice();
  virtual ~XmsgImGroupChannelStatusChangedNotice();

  XmsgImGroupChannelStatusChangedNotice(const XmsgImGroupChannelStatusChangedNotice& from);

  inline XmsgImGroupChannelStatusChangedNotice& operator=(const XmsgImGroupChannelStatusChangedNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusChangedNotice(XmsgImGroupChannelStatusChangedNotice&& from) noexcept
    : XmsgImGroupChannelStatusChangedNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusChangedNotice& operator=(XmsgImGroupChannelStatusChangedNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusChangedNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusChangedNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusChangedNotice*>(
               &_XmsgImGroupChannelStatusChangedNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(XmsgImGroupChannelStatusChangedNotice* other);
  friend void swap(XmsgImGroupChannelStatusChangedNotice& a, XmsgImGroupChannelStatusChangedNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusChangedNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusChangedNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusChangedNotice& from);
  void MergeFrom(const XmsgImGroupChannelStatusChangedNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusChangedNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusChangedNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusChangedNoticeImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XmsgImHlrChannelStatusSubReq

// map<string, string> ext = 1;
inline int XmsgImHlrChannelStatusSubReq::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrChannelStatusSubReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrChannelStatusSubReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrChannelStatusSubReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrChannelStatusSubReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrChannelStatusSubReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrChannelStatusSubRsp

// map<string, string> ext = 1;
inline int XmsgImHlrChannelStatusSubRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrChannelStatusSubRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrChannelStatusSubRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrChannelStatusSubRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrChannelStatusSubRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrChannelStatusSubRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImHlrChannelStatusPubReq

// repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
inline int XmsgImHlrChannelStatusPubReq::notice_size() const {
  return notice_.size();
}
inline void XmsgImHlrChannelStatusPubReq::clear_notice() {
  notice_.Clear();
}
inline const ::XmsgImHlrChannelStatusChangedNotice& XmsgImHlrChannelStatusPubReq::notice(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImHlrChannelStatusPubReq.notice)
  return notice_.Get(index);
}
inline ::XmsgImHlrChannelStatusChangedNotice* XmsgImHlrChannelStatusPubReq::mutable_notice(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImHlrChannelStatusPubReq.notice)
  return notice_.Mutable(index);
}
inline ::XmsgImHlrChannelStatusChangedNotice* XmsgImHlrChannelStatusPubReq::add_notice() {
  // @@protoc_insertion_point(field_add:XmsgImHlrChannelStatusPubReq.notice)
  return notice_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImHlrChannelStatusChangedNotice >*
XmsgImHlrChannelStatusPubReq::mutable_notice() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImHlrChannelStatusPubReq.notice)
  return &notice_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImHlrChannelStatusChangedNotice >&
XmsgImHlrChannelStatusPubReq::notice() const {
  // @@protoc_insertion_point(field_list:XmsgImHlrChannelStatusPubReq.notice)
  return notice_;
}

// bool more = 2;
inline void XmsgImHlrChannelStatusPubReq::clear_more() {
  more_ = false;
}
inline bool XmsgImHlrChannelStatusPubReq::more() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrChannelStatusPubReq.more)
  return more_;
}
inline void XmsgImHlrChannelStatusPubReq::set_more(bool value) {
  
  more_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrChannelStatusPubReq.more)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrChannelStatusPubRsp

// map<string, string> ext = 1;
inline int XmsgImHlrChannelStatusPubRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrChannelStatusPubRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrChannelStatusPubRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrChannelStatusPubRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrChannelStatusPubRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrChannelStatusPubRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImHlrChannelStatusChangedNotice

// string cgt = 1;
inline void XmsgImHlrChannelStatusChangedNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrChannelStatusChangedNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrChannelStatusChangedNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrChannelStatusChangedNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrChannelStatusChangedNotice.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrChannelStatusChangedNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrChannelStatusChangedNotice.cgt)
}
#endif
inline void XmsgImHlrChannelStatusChangedNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrChannelStatusChangedNotice.cgt)
}
inline void XmsgImHlrChannelStatusChangedNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrChannelStatusChangedNotice.cgt)
}
inline ::std::string* XmsgImHlrChannelStatusChangedNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrChannelStatusChangedNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrChannelStatusChangedNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrChannelStatusChangedNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrChannelStatusChangedNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrChannelStatusChangedNotice.cgt)
}

// string plat = 2;
inline void XmsgImHlrChannelStatusChangedNotice::clear_plat() {
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrChannelStatusChangedNotice::plat() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrChannelStatusChangedNotice.plat)
  return plat_.GetNoArena();
}
inline void XmsgImHlrChannelStatusChangedNotice::set_plat(const ::std::string& value) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrChannelStatusChangedNotice.plat)
}
#if LANG_CXX11
inline void XmsgImHlrChannelStatusChangedNotice::set_plat(::std::string&& value) {
  
  plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrChannelStatusChangedNotice.plat)
}
#endif
inline void XmsgImHlrChannelStatusChangedNotice::set_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrChannelStatusChangedNotice.plat)
}
inline void XmsgImHlrChannelStatusChangedNotice::set_plat(const char* value, size_t size) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrChannelStatusChangedNotice.plat)
}
inline ::std::string* XmsgImHlrChannelStatusChangedNotice::mutable_plat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrChannelStatusChangedNotice.plat)
  return plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrChannelStatusChangedNotice::release_plat() {
  // @@protoc_insertion_point(field_release:XmsgImHlrChannelStatusChangedNotice.plat)
  
  return plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrChannelStatusChangedNotice::set_allocated_plat(::std::string* plat) {
  if (plat != NULL) {
    
  } else {
    
  }
  plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plat);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrChannelStatusChangedNotice.plat)
}

// string did = 3;
inline void XmsgImHlrChannelStatusChangedNotice::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrChannelStatusChangedNotice::did() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrChannelStatusChangedNotice.did)
  return did_.GetNoArena();
}
inline void XmsgImHlrChannelStatusChangedNotice::set_did(const ::std::string& value) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrChannelStatusChangedNotice.did)
}
#if LANG_CXX11
inline void XmsgImHlrChannelStatusChangedNotice::set_did(::std::string&& value) {
  
  did_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrChannelStatusChangedNotice.did)
}
#endif
inline void XmsgImHlrChannelStatusChangedNotice::set_did(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrChannelStatusChangedNotice.did)
}
inline void XmsgImHlrChannelStatusChangedNotice::set_did(const char* value, size_t size) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrChannelStatusChangedNotice.did)
}
inline ::std::string* XmsgImHlrChannelStatusChangedNotice::mutable_did() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrChannelStatusChangedNotice.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrChannelStatusChangedNotice::release_did() {
  // @@protoc_insertion_point(field_release:XmsgImHlrChannelStatusChangedNotice.did)
  
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrChannelStatusChangedNotice::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    
  } else {
    
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrChannelStatusChangedNotice.did)
}

// string status = 4;
inline void XmsgImHlrChannelStatusChangedNotice::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrChannelStatusChangedNotice::status() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrChannelStatusChangedNotice.status)
  return status_.GetNoArena();
}
inline void XmsgImHlrChannelStatusChangedNotice::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrChannelStatusChangedNotice.status)
}
#if LANG_CXX11
inline void XmsgImHlrChannelStatusChangedNotice::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrChannelStatusChangedNotice.status)
}
#endif
inline void XmsgImHlrChannelStatusChangedNotice::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrChannelStatusChangedNotice.status)
}
inline void XmsgImHlrChannelStatusChangedNotice::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrChannelStatusChangedNotice.status)
}
inline ::std::string* XmsgImHlrChannelStatusChangedNotice::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrChannelStatusChangedNotice.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrChannelStatusChangedNotice::release_status() {
  // @@protoc_insertion_point(field_release:XmsgImHlrChannelStatusChangedNotice.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrChannelStatusChangedNotice::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrChannelStatusChangedNotice.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusSubReq

// map<string, string> ext = 1;
inline int XmsgImGroupChannelStatusSubReq::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupChannelStatusSubReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupChannelStatusSubReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupChannelStatusSubReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupChannelStatusSubReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupChannelStatusSubReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusSubRsp

// map<string, string> ext = 1;
inline int XmsgImGroupChannelStatusSubRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupChannelStatusSubRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupChannelStatusSubRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupChannelStatusSubRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupChannelStatusSubRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupChannelStatusSubRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusPubReq

// repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
inline int XmsgImGroupChannelStatusPubReq::notice_size() const {
  return notice_.size();
}
inline void XmsgImGroupChannelStatusPubReq::clear_notice() {
  notice_.Clear();
}
inline const ::XmsgImGroupChannelStatusChangedNotice& XmsgImGroupChannelStatusPubReq::notice(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImGroupChannelStatusPubReq.notice)
  return notice_.Get(index);
}
inline ::XmsgImGroupChannelStatusChangedNotice* XmsgImGroupChannelStatusPubReq::mutable_notice(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImGroupChannelStatusPubReq.notice)
  return notice_.Mutable(index);
}
inline ::XmsgImGroupChannelStatusChangedNotice* XmsgImGroupChannelStatusPubReq::add_notice() {
  // @@protoc_insertion_point(field_add:XmsgImGroupChannelStatusPubReq.notice)
  return notice_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice >*
XmsgImGroupChannelStatusPubReq::mutable_notice() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImGroupChannelStatusPubReq.notice)
  return &notice_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice >&
XmsgImGroupChannelStatusPubReq::notice() const {
  // @@protoc_insertion_point(field_list:XmsgImGroupChannelStatusPubReq.notice)
  return notice_;
}

// bool more = 2;
inline void XmsgImGroupChannelStatusPubReq::clear_more() {
  more_ = false;
}
inline bool XmsgImGroupChannelStatusPubReq::more() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupChannelStatusPubReq.more)
  return more_;
}
inline void XmsgImGroupChannelStatusPubReq::set_more(bool value) {
  
  more_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupChannelStatusPubReq.more)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusPubRsp

// map<string, string> ext = 1;
inline int XmsgImGroupChannelStatusPubRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupChannelStatusPubRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupChannelStatusPubRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupChannelStatusPubRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupChannelStatusPubRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupChannelStatusPubRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusChangedNotice

// string cgt = 1;
inline void XmsgImGroupChannelStatusChangedNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupChannelStatusChangedNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupChannelStatusChangedNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImGroupChannelStatusChangedNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupChannelStatusChangedNotice.cgt)
}
#if LANG_CXX11
inline void XmsgImGroupChannelStatusChangedNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupChannelStatusChangedNotice.cgt)
}
#endif
inline void XmsgImGroupChannelStatusChangedNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupChannelStatusChangedNotice.cgt)
}
inline void XmsgImGroupChannelStatusChangedNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupChannelStatusChangedNotice.cgt)
}
inline ::std::string* XmsgImGroupChannelStatusChangedNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupChannelStatusChangedNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupChannelStatusChangedNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupChannelStatusChangedNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupChannelStatusChangedNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupChannelStatusChangedNotice.cgt)
}

// string status = 4;
inline void XmsgImGroupChannelStatusChangedNotice::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupChannelStatusChangedNotice::status() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupChannelStatusChangedNotice.status)
  return status_.GetNoArena();
}
inline void XmsgImGroupChannelStatusChangedNotice::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupChannelStatusChangedNotice.status)
}
#if LANG_CXX11
inline void XmsgImGroupChannelStatusChangedNotice::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupChannelStatusChangedNotice.status)
}
#endif
inline void XmsgImGroupChannelStatusChangedNotice::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupChannelStatusChangedNotice.status)
}
inline void XmsgImGroupChannelStatusChangedNotice::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupChannelStatusChangedNotice.status)
}
inline ::std::string* XmsgImGroupChannelStatusChangedNotice::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupChannelStatusChangedNotice.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupChannelStatusChangedNotice::release_status() {
  // @@protoc_insertion_point(field_release:XmsgImGroupChannelStatusChangedNotice.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupChannelStatusChangedNotice::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupChannelStatusChangedNotice.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto__INCLUDED
