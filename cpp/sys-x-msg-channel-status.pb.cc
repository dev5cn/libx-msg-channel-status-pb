// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-channel-status.proto

#include "sys-x-msg-channel-status.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrChannelStatusSubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusSubReq>
      _instance;
} _XmsgImHlrChannelStatusSubReq_default_instance_;
class XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrChannelStatusSubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusSubRsp>
      _instance;
} _XmsgImHlrChannelStatusSubRsp_default_instance_;
class XmsgImHlrChannelStatusPubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusPubReq>
      _instance;
} _XmsgImHlrChannelStatusPubReq_default_instance_;
class XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrChannelStatusPubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusPubRsp>
      _instance;
} _XmsgImHlrChannelStatusPubRsp_default_instance_;
class XmsgImHlrChannelStatusChangedNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusChangedNotice>
      _instance;
} _XmsgImHlrChannelStatusChangedNotice_default_instance_;
class XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusSubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusSubReq>
      _instance;
} _XmsgImGroupChannelStatusSubReq_default_instance_;
class XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusSubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusSubRsp>
      _instance;
} _XmsgImGroupChannelStatusSubRsp_default_instance_;
class XmsgImGroupChannelStatusPubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusPubReq>
      _instance;
} _XmsgImGroupChannelStatusPubReq_default_instance_;
class XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusPubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusPubRsp>
      _instance;
} _XmsgImGroupChannelStatusPubRsp_default_instance_;
class XmsgImGroupChannelStatusChangedNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusChangedNotice>
      _instance;
} _XmsgImGroupChannelStatusChangedNotice_default_instance_;
namespace protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto {
void InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrChannelStatusSubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrChannelStatusSubReq_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusSubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusSubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusSubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusSubReqImpl);
}

void InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrChannelStatusSubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrChannelStatusSubRsp_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusSubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusSubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusSubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusSubRspImpl);
}

void InitDefaultsXmsgImHlrChannelStatusPubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusChangedNotice();
  {
    void* ptr = &::_XmsgImHlrChannelStatusPubReq_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusPubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusPubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusPubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusPubReqImpl);
}

void InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrChannelStatusPubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrChannelStatusPubRsp_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusPubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusPubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusPubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusPubRspImpl);
}

void InitDefaultsXmsgImHlrChannelStatusChangedNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrChannelStatusChangedNotice_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusChangedNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusChangedNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusChangedNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusChangedNoticeImpl);
}

void InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupChannelStatusSubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupChannelStatusSubReq_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusSubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusSubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusSubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusSubReqImpl);
}

void InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupChannelStatusSubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupChannelStatusSubRsp_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusSubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusSubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusSubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusSubRspImpl);
}

void InitDefaultsXmsgImGroupChannelStatusPubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusChangedNotice();
  {
    void* ptr = &::_XmsgImGroupChannelStatusPubReq_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusPubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusPubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusPubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusPubReqImpl);
}

void InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupChannelStatusPubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupChannelStatusPubRsp_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusPubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusPubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusPubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusPubRspImpl);
}

void InitDefaultsXmsgImGroupChannelStatusChangedNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupChannelStatusChangedNotice_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusChangedNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusChangedNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusChangedNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusChangedNoticeImpl);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubReq, notice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubReq, more_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubReq, notice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubReq, more_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusChangedNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusChangedNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusChangedNotice, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse)},
  { 9, -1, sizeof(::XmsgImHlrChannelStatusSubReq)},
  { 15, 22, sizeof(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse)},
  { 24, -1, sizeof(::XmsgImHlrChannelStatusSubRsp)},
  { 30, -1, sizeof(::XmsgImHlrChannelStatusPubReq)},
  { 37, 44, sizeof(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse)},
  { 46, -1, sizeof(::XmsgImHlrChannelStatusPubRsp)},
  { 52, -1, sizeof(::XmsgImHlrChannelStatusChangedNotice)},
  { 61, 68, sizeof(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse)},
  { 70, -1, sizeof(::XmsgImGroupChannelStatusSubReq)},
  { 76, 83, sizeof(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse)},
  { 85, -1, sizeof(::XmsgImGroupChannelStatusSubRsp)},
  { 91, -1, sizeof(::XmsgImGroupChannelStatusPubReq)},
  { 98, 105, sizeof(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse)},
  { 107, -1, sizeof(::XmsgImGroupChannelStatusPubRsp)},
  { 113, -1, sizeof(::XmsgImGroupChannelStatusChangedNotice)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusSubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusSubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusPubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusPubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusChangedNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusSubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusSubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusPubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusPubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusChangedNotice_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sys-x-msg-channel-status.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036sys-x-msg-channel-status.proto\"\177\n\034Xmsg"
      "ImHlrChannelStatusSubReq\0223\n\003ext\030\001 \003(\0132&."
      "XmsgImHlrChannelStatusSubReq.ExtEntry\032*\n"
      "\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
      "\001\"\177\n\034XmsgImHlrChannelStatusSubRsp\0223\n\003ext"
      "\030\001 \003(\0132&.XmsgImHlrChannelStatusSubRsp.Ex"
      "tEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\t:\0028\001\"b\n\034XmsgImHlrChannelStatusPubR"
      "eq\0224\n\006notice\030\001 \003(\0132$.XmsgImHlrChannelSta"
      "tusChangedNotice\022\014\n\004more\030\002 \001(\010\"\177\n\034XmsgIm"
      "HlrChannelStatusPubRsp\0223\n\003ext\030\001 \003(\0132&.Xm"
      "sgImHlrChannelStatusPubRsp.ExtEntry\032*\n\010E"
      "xtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
      "]\n#XmsgImHlrChannelStatusChangedNotice\022\013"
      "\n\003cgt\030\001 \001(\t\022\014\n\004plat\030\002 \001(\t\022\013\n\003did\030\003 \001(\t\022\016"
      "\n\006status\030\004 \001(\t\"\203\001\n\036XmsgImGroupChannelSta"
      "tusSubReq\0225\n\003ext\030\001 \003(\0132(.XmsgImGroupChan"
      "nelStatusSubReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003"
      "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\203\001\n\036XmsgImG"
      "roupChannelStatusSubRsp\0225\n\003ext\030\001 \003(\0132(.X"
      "msgImGroupChannelStatusSubRsp.ExtEntry\032*"
      "\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
      "8\001\"f\n\036XmsgImGroupChannelStatusPubReq\0226\n\006"
      "notice\030\001 \003(\0132&.XmsgImGroupChannelStatusC"
      "hangedNotice\022\014\n\004more\030\002 \001(\010\"\203\001\n\036XmsgImGro"
      "upChannelStatusPubRsp\0225\n\003ext\030\001 \003(\0132(.Xms"
      "gImGroupChannelStatusPubRsp.ExtEntry\032*\n\010"
      "ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
      "\"D\n%XmsgImGroupChannelStatusChangedNotic"
      "e\022\013\n\003cgt\030\001 \001(\t\022\016\n\006status\030\004 \001(\tB\"\n\010x.msg."
      "pbB\026XmsgChannelStatusSysPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1234);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sys-x-msg-channel-status.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto

// ===================================================================

XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse() {}
XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[0];
}
void XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrChannelStatusSubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusSubReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusSubReq::XmsgImHlrChannelStatusSubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusSubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusSubReq)
}
XmsgImHlrChannelStatusSubReq::XmsgImHlrChannelStatusSubReq(const XmsgImHlrChannelStatusSubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusSubReq)
}

void XmsgImHlrChannelStatusSubReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusSubReq::~XmsgImHlrChannelStatusSubReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusSubReq)
  SharedDtor();
}

void XmsgImHlrChannelStatusSubReq::SharedDtor() {
}

void XmsgImHlrChannelStatusSubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusSubReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusSubReq& XmsgImHlrChannelStatusSubReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusSubReq();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusSubReq* XmsgImHlrChannelStatusSubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusSubReq* n = new XmsgImHlrChannelStatusSubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusSubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusSubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusSubReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusSubReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusSubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusSubReq)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusSubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusSubReq)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusSubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusSubReq)
  return target;
}

size_t XmsgImHlrChannelStatusSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusSubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusSubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusSubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusSubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusSubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusSubReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusSubReq::MergeFrom(const XmsgImHlrChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrChannelStatusSubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusSubReq::CopyFrom(const XmsgImHlrChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusSubReq::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusSubReq::Swap(XmsgImHlrChannelStatusSubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusSubReq::InternalSwap(XmsgImHlrChannelStatusSubReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusSubReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse() {}
XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[2];
}
void XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrChannelStatusSubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusSubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusSubRsp::XmsgImHlrChannelStatusSubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusSubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusSubRsp)
}
XmsgImHlrChannelStatusSubRsp::XmsgImHlrChannelStatusSubRsp(const XmsgImHlrChannelStatusSubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusSubRsp)
}

void XmsgImHlrChannelStatusSubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusSubRsp::~XmsgImHlrChannelStatusSubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusSubRsp)
  SharedDtor();
}

void XmsgImHlrChannelStatusSubRsp::SharedDtor() {
}

void XmsgImHlrChannelStatusSubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusSubRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusSubRsp& XmsgImHlrChannelStatusSubRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusSubRsp();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusSubRsp* XmsgImHlrChannelStatusSubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusSubRsp* n = new XmsgImHlrChannelStatusSubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusSubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusSubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusSubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusSubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusSubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusSubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusSubRsp)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusSubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusSubRsp)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusSubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusSubRsp)
  return target;
}

size_t XmsgImHlrChannelStatusSubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusSubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusSubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusSubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusSubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusSubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusSubRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusSubRsp::MergeFrom(const XmsgImHlrChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrChannelStatusSubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusSubRsp::CopyFrom(const XmsgImHlrChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusSubRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusSubRsp::Swap(XmsgImHlrChannelStatusSubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusSubRsp::InternalSwap(XmsgImHlrChannelStatusSubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusSubRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrChannelStatusPubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusPubReq::kNoticeFieldNumber;
const int XmsgImHlrChannelStatusPubReq::kMoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusPubReq::XmsgImHlrChannelStatusPubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusPubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusPubReq)
}
XmsgImHlrChannelStatusPubReq::XmsgImHlrChannelStatusPubReq(const XmsgImHlrChannelStatusPubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notice_(from.notice_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  more_ = from.more_;
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusPubReq)
}

void XmsgImHlrChannelStatusPubReq::SharedCtor() {
  more_ = false;
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusPubReq::~XmsgImHlrChannelStatusPubReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusPubReq)
  SharedDtor();
}

void XmsgImHlrChannelStatusPubReq::SharedDtor() {
}

void XmsgImHlrChannelStatusPubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusPubReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusPubReq& XmsgImHlrChannelStatusPubReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusPubReq();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusPubReq* XmsgImHlrChannelStatusPubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusPubReq* n = new XmsgImHlrChannelStatusPubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusPubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notice_.Clear();
  more_ = false;
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusPubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusPubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_notice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool more = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &more_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusPubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusPubReq)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusPubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notice_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->notice(static_cast<int>(i)), output);
  }

  // bool more = 2;
  if (this->more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->more(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusPubReq)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusPubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notice_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notice(static_cast<int>(i)), deterministic, target);
  }

  // bool more = 2;
  if (this->more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->more(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusPubReq)
  return target;
}

size_t XmsgImHlrChannelStatusPubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusPubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notice_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notice(static_cast<int>(i)));
    }
  }

  // bool more = 2;
  if (this->more() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusPubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusPubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusPubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusPubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusPubReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusPubReq::MergeFrom(const XmsgImHlrChannelStatusPubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notice_.MergeFrom(from.notice_);
  if (from.more() != 0) {
    set_more(from.more());
  }
}

void XmsgImHlrChannelStatusPubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusPubReq::CopyFrom(const XmsgImHlrChannelStatusPubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusPubReq::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusPubReq::Swap(XmsgImHlrChannelStatusPubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusPubReq::InternalSwap(XmsgImHlrChannelStatusPubReq* other) {
  using std::swap;
  notice_.InternalSwap(&other->notice_);
  swap(more_, other->more_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusPubReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse() {}
XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[5];
}
void XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrChannelStatusPubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusPubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusPubRsp::XmsgImHlrChannelStatusPubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusPubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusPubRsp)
}
XmsgImHlrChannelStatusPubRsp::XmsgImHlrChannelStatusPubRsp(const XmsgImHlrChannelStatusPubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusPubRsp)
}

void XmsgImHlrChannelStatusPubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusPubRsp::~XmsgImHlrChannelStatusPubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusPubRsp)
  SharedDtor();
}

void XmsgImHlrChannelStatusPubRsp::SharedDtor() {
}

void XmsgImHlrChannelStatusPubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusPubRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusPubRsp& XmsgImHlrChannelStatusPubRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusPubRsp();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusPubRsp* XmsgImHlrChannelStatusPubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusPubRsp* n = new XmsgImHlrChannelStatusPubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusPubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusPubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusPubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusPubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusPubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusPubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusPubRsp)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusPubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusPubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusPubRsp)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusPubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusPubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusPubRsp)
  return target;
}

size_t XmsgImHlrChannelStatusPubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusPubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusPubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusPubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusPubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusPubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusPubRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusPubRsp::MergeFrom(const XmsgImHlrChannelStatusPubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrChannelStatusPubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusPubRsp::CopyFrom(const XmsgImHlrChannelStatusPubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusPubRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusPubRsp::Swap(XmsgImHlrChannelStatusPubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusPubRsp::InternalSwap(XmsgImHlrChannelStatusPubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusPubRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrChannelStatusChangedNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusChangedNotice::kCgtFieldNumber;
const int XmsgImHlrChannelStatusChangedNotice::kPlatFieldNumber;
const int XmsgImHlrChannelStatusChangedNotice::kDidFieldNumber;
const int XmsgImHlrChannelStatusChangedNotice::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusChangedNotice::XmsgImHlrChannelStatusChangedNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusChangedNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusChangedNotice)
}
XmsgImHlrChannelStatusChangedNotice::XmsgImHlrChannelStatusChangedNotice(const XmsgImHlrChannelStatusChangedNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusChangedNotice)
}

void XmsgImHlrChannelStatusChangedNotice::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusChangedNotice::~XmsgImHlrChannelStatusChangedNotice() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusChangedNotice)
  SharedDtor();
}

void XmsgImHlrChannelStatusChangedNotice::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImHlrChannelStatusChangedNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusChangedNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusChangedNotice& XmsgImHlrChannelStatusChangedNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImHlrChannelStatusChangedNotice();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusChangedNotice* XmsgImHlrChannelStatusChangedNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusChangedNotice* n = new XmsgImHlrChannelStatusChangedNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusChangedNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusChangedNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusChangedNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusChangedNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusChangedNotice.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusChangedNotice.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusChangedNotice.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusChangedNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusChangedNotice)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusChangedNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string plat = 2;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plat(), output);
  }

  // string did = 3;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->did(), output);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusChangedNotice)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusChangedNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string plat = 2;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plat(), target);
  }

  // string did = 3;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->did(), target);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusChangedNotice)
  return target;
}

size_t XmsgImHlrChannelStatusChangedNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusChangedNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string plat = 2;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 3;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string status = 4;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusChangedNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusChangedNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusChangedNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusChangedNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusChangedNotice)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusChangedNotice::MergeFrom(const XmsgImHlrChannelStatusChangedNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void XmsgImHlrChannelStatusChangedNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusChangedNotice::CopyFrom(const XmsgImHlrChannelStatusChangedNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusChangedNotice::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusChangedNotice::Swap(XmsgImHlrChannelStatusChangedNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusChangedNotice::InternalSwap(XmsgImHlrChannelStatusChangedNotice* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusChangedNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse() {}
XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[8];
}
void XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupChannelStatusSubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusSubReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusSubReq::XmsgImGroupChannelStatusSubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusSubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusSubReq)
}
XmsgImGroupChannelStatusSubReq::XmsgImGroupChannelStatusSubReq(const XmsgImGroupChannelStatusSubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusSubReq)
}

void XmsgImGroupChannelStatusSubReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusSubReq::~XmsgImGroupChannelStatusSubReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusSubReq)
  SharedDtor();
}

void XmsgImGroupChannelStatusSubReq::SharedDtor() {
}

void XmsgImGroupChannelStatusSubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusSubReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusSubReq& XmsgImGroupChannelStatusSubReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusSubReq();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusSubReq* XmsgImGroupChannelStatusSubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusSubReq* n = new XmsgImGroupChannelStatusSubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusSubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusSubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusSubReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusSubReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusSubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusSubReq)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusSubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusSubReq)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusSubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusSubReq)
  return target;
}

size_t XmsgImGroupChannelStatusSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusSubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusSubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusSubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusSubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusSubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusSubReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusSubReq::MergeFrom(const XmsgImGroupChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupChannelStatusSubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusSubReq::CopyFrom(const XmsgImGroupChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusSubReq::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusSubReq::Swap(XmsgImGroupChannelStatusSubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusSubReq::InternalSwap(XmsgImGroupChannelStatusSubReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusSubReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse() {}
XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[10];
}
void XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupChannelStatusSubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusSubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusSubRsp::XmsgImGroupChannelStatusSubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusSubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusSubRsp)
}
XmsgImGroupChannelStatusSubRsp::XmsgImGroupChannelStatusSubRsp(const XmsgImGroupChannelStatusSubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusSubRsp)
}

void XmsgImGroupChannelStatusSubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusSubRsp::~XmsgImGroupChannelStatusSubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusSubRsp)
  SharedDtor();
}

void XmsgImGroupChannelStatusSubRsp::SharedDtor() {
}

void XmsgImGroupChannelStatusSubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusSubRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusSubRsp& XmsgImGroupChannelStatusSubRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusSubRsp();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusSubRsp* XmsgImGroupChannelStatusSubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusSubRsp* n = new XmsgImGroupChannelStatusSubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusSubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusSubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusSubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusSubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusSubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusSubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusSubRsp)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusSubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusSubRsp)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusSubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusSubRsp)
  return target;
}

size_t XmsgImGroupChannelStatusSubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusSubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusSubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusSubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusSubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusSubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusSubRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusSubRsp::MergeFrom(const XmsgImGroupChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupChannelStatusSubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusSubRsp::CopyFrom(const XmsgImGroupChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusSubRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusSubRsp::Swap(XmsgImGroupChannelStatusSubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusSubRsp::InternalSwap(XmsgImGroupChannelStatusSubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusSubRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupChannelStatusPubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusPubReq::kNoticeFieldNumber;
const int XmsgImGroupChannelStatusPubReq::kMoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusPubReq::XmsgImGroupChannelStatusPubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusPubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusPubReq)
}
XmsgImGroupChannelStatusPubReq::XmsgImGroupChannelStatusPubReq(const XmsgImGroupChannelStatusPubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notice_(from.notice_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  more_ = from.more_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusPubReq)
}

void XmsgImGroupChannelStatusPubReq::SharedCtor() {
  more_ = false;
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusPubReq::~XmsgImGroupChannelStatusPubReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusPubReq)
  SharedDtor();
}

void XmsgImGroupChannelStatusPubReq::SharedDtor() {
}

void XmsgImGroupChannelStatusPubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusPubReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusPubReq& XmsgImGroupChannelStatusPubReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusPubReq();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusPubReq* XmsgImGroupChannelStatusPubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusPubReq* n = new XmsgImGroupChannelStatusPubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusPubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notice_.Clear();
  more_ = false;
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusPubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusPubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_notice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool more = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &more_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusPubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusPubReq)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusPubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notice_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->notice(static_cast<int>(i)), output);
  }

  // bool more = 2;
  if (this->more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->more(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusPubReq)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusPubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notice_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notice(static_cast<int>(i)), deterministic, target);
  }

  // bool more = 2;
  if (this->more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->more(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusPubReq)
  return target;
}

size_t XmsgImGroupChannelStatusPubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusPubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notice_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notice(static_cast<int>(i)));
    }
  }

  // bool more = 2;
  if (this->more() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusPubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusPubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusPubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusPubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusPubReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusPubReq::MergeFrom(const XmsgImGroupChannelStatusPubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notice_.MergeFrom(from.notice_);
  if (from.more() != 0) {
    set_more(from.more());
  }
}

void XmsgImGroupChannelStatusPubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusPubReq::CopyFrom(const XmsgImGroupChannelStatusPubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusPubReq::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusPubReq::Swap(XmsgImGroupChannelStatusPubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusPubReq::InternalSwap(XmsgImGroupChannelStatusPubReq* other) {
  using std::swap;
  notice_.InternalSwap(&other->notice_);
  swap(more_, other->more_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusPubReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse() {}
XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[13];
}
void XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupChannelStatusPubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusPubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusPubRsp::XmsgImGroupChannelStatusPubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusPubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusPubRsp)
}
XmsgImGroupChannelStatusPubRsp::XmsgImGroupChannelStatusPubRsp(const XmsgImGroupChannelStatusPubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusPubRsp)
}

void XmsgImGroupChannelStatusPubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusPubRsp::~XmsgImGroupChannelStatusPubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusPubRsp)
  SharedDtor();
}

void XmsgImGroupChannelStatusPubRsp::SharedDtor() {
}

void XmsgImGroupChannelStatusPubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusPubRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusPubRsp& XmsgImGroupChannelStatusPubRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusPubRsp();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusPubRsp* XmsgImGroupChannelStatusPubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusPubRsp* n = new XmsgImGroupChannelStatusPubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusPubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusPubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusPubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusPubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusPubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusPubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusPubRsp)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusPubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusPubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusPubRsp)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusPubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusPubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusPubRsp)
  return target;
}

size_t XmsgImGroupChannelStatusPubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusPubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusPubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusPubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusPubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusPubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusPubRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusPubRsp::MergeFrom(const XmsgImGroupChannelStatusPubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupChannelStatusPubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusPubRsp::CopyFrom(const XmsgImGroupChannelStatusPubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusPubRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusPubRsp::Swap(XmsgImGroupChannelStatusPubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusPubRsp::InternalSwap(XmsgImGroupChannelStatusPubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusPubRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupChannelStatusChangedNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusChangedNotice::kCgtFieldNumber;
const int XmsgImGroupChannelStatusChangedNotice::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusChangedNotice::XmsgImGroupChannelStatusChangedNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusChangedNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusChangedNotice)
}
XmsgImGroupChannelStatusChangedNotice::XmsgImGroupChannelStatusChangedNotice(const XmsgImGroupChannelStatusChangedNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusChangedNotice)
}

void XmsgImGroupChannelStatusChangedNotice::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusChangedNotice::~XmsgImGroupChannelStatusChangedNotice() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusChangedNotice)
  SharedDtor();
}

void XmsgImGroupChannelStatusChangedNotice::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupChannelStatusChangedNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusChangedNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusChangedNotice& XmsgImGroupChannelStatusChangedNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::InitDefaultsXmsgImGroupChannelStatusChangedNotice();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusChangedNotice* XmsgImGroupChannelStatusChangedNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusChangedNotice* n = new XmsgImGroupChannelStatusChangedNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusChangedNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusChangedNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusChangedNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusChangedNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusChangedNotice.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusChangedNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusChangedNotice)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusChangedNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupChannelStatusChangedNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupChannelStatusChangedNotice.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusChangedNotice)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusChangedNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupChannelStatusChangedNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupChannelStatusChangedNotice.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusChangedNotice)
  return target;
}

size_t XmsgImGroupChannelStatusChangedNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusChangedNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string status = 4;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusChangedNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusChangedNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusChangedNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusChangedNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusChangedNotice)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusChangedNotice::MergeFrom(const XmsgImGroupChannelStatusChangedNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void XmsgImGroupChannelStatusChangedNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusChangedNotice::CopyFrom(const XmsgImGroupChannelStatusChangedNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusChangedNotice::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusChangedNotice::Swap(XmsgImGroupChannelStatusChangedNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusChangedNotice::InternalSwap(XmsgImGroupChannelStatusChangedNotice* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusChangedNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dchannel_2dstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
